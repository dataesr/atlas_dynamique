import { useState, useLayoutEffect, useEffect } from "react";
import { sizeMap, defaultSize } from "./constants";
export const useIsomorphicLayoutEffect = typeof window !== "undefined" ? useLayoutEffect : useEffect;
export function useWindowWidth() {
    const [width, setWidth] = useState(sizeMap[defaultSize]);
    useIsomorphicLayoutEffect(() => {
        const updateWidth = () => {
            setWidth(window.innerWidth);
        };
        window.addEventListener("resize", updateWidth);
        updateWidth();
        return () => window.removeEventListener("resize", updateWidth);
    }, []);
    return width;
}
export function responsify(sizeOption, windowWidth) {
    var _a;
    if (sizeOption === "responsive") {
        if (typeof window === "undefined")
            return sizeMap[defaultSize];
        return Math.min(window.innerHeight, window.innerWidth) * 0.75;
    }
    if (typeof window === "undefined")
        return sizeMap[sizeOption];
    const fittingSize = (_a = Object.values(sizeMap)
        .reverse()
        .find((size) => size <= windowWidth)) !== null && _a !== void 0 ? _a : sizeMap.sm;
    return Math.min(fittingSize, sizeMap[sizeOption]);
}
