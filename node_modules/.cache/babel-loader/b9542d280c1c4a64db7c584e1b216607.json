{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\haallat\\\\Documents\\\\atlas_dynamique\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useLayoutEffect, useEffect } from \"react\";\nimport { sizeMap, defaultSize } from \"./constants\";\nexport var useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\nexport function useWindowWidth() {\n  var _useState = useState(sizeMap[defaultSize]),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  useIsomorphicLayoutEffect(function () {\n    var updateWidth = function updateWidth() {\n      setWidth(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n    return function () {\n      return window.removeEventListener(\"resize\", updateWidth);\n    };\n  }, []);\n  return width;\n}\nexport function responsify(sizeOption, windowWidth) {\n  var _a;\n\n  if (sizeOption === \"responsive\") {\n    if (typeof window === \"undefined\") return sizeMap[defaultSize];\n    return Math.min(window.innerHeight, window.innerWidth) * 0.75;\n  }\n\n  if (typeof window === \"undefined\") return sizeMap[sizeOption];\n  var fittingSize = (_a = Object.values(sizeMap).reverse().find(function (size) {\n    return size <= windowWidth;\n  })) !== null && _a !== void 0 ? _a : sizeMap.sm;\n  return Math.min(fittingSize, sizeMap[sizeOption]);\n}","map":null,"metadata":{},"sourceType":"module"}